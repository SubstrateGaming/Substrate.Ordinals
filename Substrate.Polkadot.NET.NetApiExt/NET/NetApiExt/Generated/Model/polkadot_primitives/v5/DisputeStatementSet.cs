//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5
{
    
    
    /// <summary>
    /// >> 320 - Composite[polkadot_primitives.v5.DisputeStatementSet]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class DisputeStatementSet : BaseType
    {
        
        /// <summary>
        /// >> candidate_hash
        /// </summary>
        private Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_core_primitives.CandidateHash _candidateHash;
        
        /// <summary>
        /// >> session
        /// </summary>
        private Substrate.NetApi.Model.Types.Primitive.U32 _session;
        
        /// <summary>
        /// >> statements
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.EnumDisputeStatement, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.ValidatorIndex, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Signature>> _statements;
        
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_core_primitives.CandidateHash CandidateHash
        {
            get
            {
                return this._candidateHash;
            }
            set
            {
                this._candidateHash = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Primitive.U32 Session
        {
            get
            {
                return this._session;
            }
            set
            {
                this._session = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.EnumDisputeStatement, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.ValidatorIndex, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Signature>> Statements
        {
            get
            {
                return this._statements;
            }
            set
            {
                this._statements = value;
            }
        }
        
        public override string TypeName()
        {
            return "DisputeStatementSet";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(CandidateHash.Encode());
            result.AddRange(Session.Encode());
            result.AddRange(Statements.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            CandidateHash = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_core_primitives.CandidateHash();
            CandidateHash.Decode(byteArray, ref p);
            Session = new Substrate.NetApi.Model.Types.Primitive.U32();
            Session.Decode(byteArray, ref p);
            Statements = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.EnumDisputeStatement, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.ValidatorIndex, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Signature>>();
            Statements.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
