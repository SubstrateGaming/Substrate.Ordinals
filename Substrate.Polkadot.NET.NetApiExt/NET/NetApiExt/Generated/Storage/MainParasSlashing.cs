//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Polkadot.NET.NetApiExt.Generated.Storage
{
    
    
    public sealed class ParasSlashingStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public ParasSlashingStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ParasSlashing", "UnappliedSlashes"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_core_primitives.CandidateHash>), typeof(Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.slashing.PendingSlashes)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ParasSlashing", "ValidatorSetCounts"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
        }
        
        /// <summary>
        /// >> UnappliedSlashesParams
        ///  Validators pending dispute slashes.
        /// </summary>
        public static string UnappliedSlashesParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_core_primitives.CandidateHash> key)
        {
            return RequestGenerator.GetStorage("ParasSlashing", "UnappliedSlashes", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> UnappliedSlashesDefault
        /// Default value as hex string
        /// </summary>
        public static string UnappliedSlashesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> UnappliedSlashes
        ///  Validators pending dispute slashes.
        /// </summary>
        public async Task<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.slashing.PendingSlashes> UnappliedSlashes(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_core_primitives.CandidateHash> key, CancellationToken token)
        {
            string parameters = ParasSlashingStorage.UnappliedSlashesParams(key);
            var result = await _client.GetStorageAsync<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.slashing.PendingSlashes>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> ValidatorSetCountsParams
        ///  `ValidatorSetCount` per session.
        /// </summary>
        public static string ValidatorSetCountsParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("ParasSlashing", "ValidatorSetCounts", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> ValidatorSetCountsDefault
        /// Default value as hex string
        /// </summary>
        public static string ValidatorSetCountsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> ValidatorSetCounts
        ///  `ValidatorSetCount` per session.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> ValidatorSetCounts(Substrate.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            string parameters = ParasSlashingStorage.ValidatorSetCountsParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, token);
            return result;
        }
    }
    
    public sealed class ParasSlashingCalls
    {
        
        /// <summary>
        /// >> report_dispute_lost_unsigned
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ReportDisputeLostUnsigned(Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.slashing.DisputeProof dispute_proof, Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_session.MembershipProof key_owner_proof)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(dispute_proof.Encode());
            byteArray.AddRange(key_owner_proof.Encode());
            return new Method(63, "ParasSlashing", 0, "report_dispute_lost_unsigned", byteArray.ToArray());
        }
    }
    
    public sealed class ParasSlashingConstants
    {
    }
    
    public enum ParasSlashingErrors
    {
        
        /// <summary>
        /// >> InvalidKeyOwnershipProof
        /// The key ownership proof is invalid.
        /// </summary>
        InvalidKeyOwnershipProof,
        
        /// <summary>
        /// >> InvalidSessionIndex
        /// The session index is too old or invalid.
        /// </summary>
        InvalidSessionIndex,
        
        /// <summary>
        /// >> InvalidCandidateHash
        /// The candidate hash is invalid.
        /// </summary>
        InvalidCandidateHash,
        
        /// <summary>
        /// >> InvalidValidatorIndex
        /// There is no pending slash for the given validator index and time
        /// slot.
        /// </summary>
        InvalidValidatorIndex,
        
        /// <summary>
        /// >> ValidatorIndexIdMismatch
        /// The validator index does not match the validator id.
        /// </summary>
        ValidatorIndexIdMismatch,
        
        /// <summary>
        /// >> DuplicateSlashingReport
        /// The given slashing report is valid but already previously reported.
        /// </summary>
        DuplicateSlashingReport,
    }
}
