//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Polkadot.NET.NetApiExt.Generated.Storage
{
    
    
    public sealed class ParaInherentStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public ParaInherentStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ParaInherent", "Included"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ParaInherent", "OnChainVotes"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.ScrapedOnChainVotes)));
        }
        
        /// <summary>
        /// >> IncludedParams
        ///  Whether the paras inherent was included within this block.
        /// 
        ///  The `Option<()>` is effectively a `bool`, but it never hits storage in the `None` variant
        ///  due to the guarantees of FRAME's storage APIs.
        /// 
        ///  If this is `None` at the end of the block, we panic and render the block invalid.
        /// </summary>
        public static string IncludedParams()
        {
            return RequestGenerator.GetStorage("ParaInherent", "Included", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> IncludedDefault
        /// Default value as hex string
        /// </summary>
        public static string IncludedDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Included
        ///  Whether the paras inherent was included within this block.
        /// 
        ///  The `Option<()>` is effectively a `bool`, but it never hits storage in the `None` variant
        ///  due to the guarantees of FRAME's storage APIs.
        /// 
        ///  If this is `None` at the end of the block, we panic and render the block invalid.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseTuple> Included(CancellationToken token)
        {
            string parameters = ParaInherentStorage.IncludedParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseTuple>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> OnChainVotesParams
        ///  Scraped on chain data for extracting resolved disputes as well as backing votes.
        /// </summary>
        public static string OnChainVotesParams()
        {
            return RequestGenerator.GetStorage("ParaInherent", "OnChainVotes", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> OnChainVotesDefault
        /// Default value as hex string
        /// </summary>
        public static string OnChainVotesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> OnChainVotes
        ///  Scraped on chain data for extracting resolved disputes as well as backing votes.
        /// </summary>
        public async Task<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.ScrapedOnChainVotes> OnChainVotes(CancellationToken token)
        {
            string parameters = ParaInherentStorage.OnChainVotesParams();
            var result = await _client.GetStorageAsync<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.ScrapedOnChainVotes>(parameters, token);
            return result;
        }
    }
    
    public sealed class ParaInherentCalls
    {
        
        /// <summary>
        /// >> enter
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Enter(Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.InherentData data)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(data.Encode());
            return new Method(54, "ParaInherent", 0, "enter", byteArray.ToArray());
        }
    }
    
    public sealed class ParaInherentConstants
    {
    }
    
    public enum ParaInherentErrors
    {
        
        /// <summary>
        /// >> TooManyInclusionInherents
        /// Inclusion inherent called more than once per block.
        /// </summary>
        TooManyInclusionInherents,
        
        /// <summary>
        /// >> InvalidParentHeader
        /// The hash of the submitted parent header doesn't correspond to the saved block hash of
        /// the parent.
        /// </summary>
        InvalidParentHeader,
        
        /// <summary>
        /// >> CandidateConcludedInvalid
        /// Disputed candidate that was concluded invalid.
        /// </summary>
        CandidateConcludedInvalid,
        
        /// <summary>
        /// >> InherentOverweight
        /// The data given to the inherent will result in an overweight block.
        /// </summary>
        InherentOverweight,
        
        /// <summary>
        /// >> DisputeStatementsUnsortedOrDuplicates
        /// The ordering of dispute statements was invalid.
        /// </summary>
        DisputeStatementsUnsortedOrDuplicates,
        
        /// <summary>
        /// >> DisputeInvalid
        /// A dispute statement was invalid.
        /// </summary>
        DisputeInvalid,
    }
}
